--- cmake-3.28.5/Modules/FindJNI.cmake.orig	2024-05-07 14:42:47.000000000 +0200
+++ cmake-3.28.5/Modules/FindJNI.cmake	2024-05-25 08:26:32.741070928 +0200
@@ -141,7 +141,7 @@ macro(java_append_library_directories _v
   # 1.6.0_18 + icedtea patches. However, it would be much better to base the
   # guess on the first part of the GNU config.guess platform triplet.
   if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
-    if(CMAKE_LIBRARY_ARCHITECTURE STREQUAL "x86_64-linux-gnux32")
+    if(CMAKE_LIBRARY_ARCHITECTURE STREQUAL "x86_64-linux-gnux32" OR LIB_SUFFIX STREQUAL "x32")
       set(_java_libarch "x32" "amd64" "i386")
     else()
       set(_java_libarch "amd64" "i386")
@@ -271,56 +271,27 @@ if (WIN32)
 endif()
 
 set(_JNI_JAVA_DIRECTORIES_BASE
-  /usr/lib/jvm/java
-  /usr/lib/java
-  /usr/lib/jvm
-  /usr/local/lib/java
+  /usr/lib${LIB_SUFFIX}/jvm/java
+  /usr/lib${LIB_SUFFIX}/java
+  /usr/lib${LIB_SUFFIX}/jvm
+  /usr/local/lib${LIB_SUFFIX}/java
   /usr/local/share/java
-  /usr/lib/j2sdk1.4-sun
-  /usr/lib/j2sdk1.5-sun
   /opt/sun-jdk-1.5.0.04
-  /usr/lib/jvm/java-6-sun
-  /usr/lib/jvm/java-1.5.0-sun
-  /usr/lib/jvm/java-6-sun-1.6.0.00       # can this one be removed according to #8821 ? Alex
-  /usr/lib/jvm/java-6-openjdk
-  /usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0        # fedora
+  /usr/lib${LIB_SUFFIX}/jvm/java-6-sun
+  /usr/lib${LIB_SUFFIX}/jvm/java-1.5.0-sun
+  /usr/lib${LIB_SUFFIX}/jvm/java-6-sun-1.6.0.00       # can this one be removed according to #8821 ? Alex
+  /usr/lib${LIB_SUFFIX}/jvm/java-6-openjdk
+  /usr/lib${LIB_SUFFIX}/jvm/java-1.6.0-openjdk-1.6.0.0        # fedora
   # Debian specific paths for default JVM
-  /usr/lib/jvm/default-java
+  /usr/lib${LIB_SUFFIX}/jvm/default-java
   # Arch Linux specific paths for default JVM
-  /usr/lib/jvm/default
-  # Ubuntu specific paths for default JVM
-  /usr/lib/jvm/java-21-openjdk-{libarch}    # Ubuntu 23.04
-  /usr/lib/jvm/java-20-openjdk-{libarch}    # Ubuntu 22.10
-  /usr/lib/jvm/java-19-openjdk-{libarch}    # Ubuntu 22.04 LTS
-  /usr/lib/jvm/java-18-openjdk-{libarch}    # Ubuntu 22.04 LTS
-  /usr/lib/jvm/java-17-openjdk-{libarch}    # Ubuntu 18.04 LTS
-  /usr/lib/jvm/java-16-openjdk-{libarch}    # Ubuntu 20.04 LTS
-  /usr/lib/jvm/java-13-openjdk-{libarch}    # Ubuntu 20.04 LTS
-  /usr/lib/jvm/java-11-openjdk-{libarch}    # Ubuntu 18.04 LTS
-  /usr/lib/jvm/java-8-openjdk-{libarch}     # Ubuntu 15.10
-  /usr/lib/jvm/java-7-openjdk-{libarch}     # Ubuntu 15.10
-  /usr/lib/jvm/java-6-openjdk-{libarch}     # Ubuntu 15.10
-  # OpenBSD specific paths for default JVM
-  /usr/local/jdk-1.7.0
-  /usr/local/jre-1.7.0
-  /usr/local/jdk-1.6.0
-  /usr/local/jre-1.6.0
-  # FreeBSD specific paths for default JVM
-  /usr/local/openjdk15
-  /usr/local/openjdk14
-  /usr/local/openjdk13
-  /usr/local/openjdk12
-  /usr/local/openjdk11
-  /usr/local/openjdk8
-  /usr/local/openjdk7
-  # SuSE specific paths for default JVM
-  /usr/lib64/jvm/java
-  /usr/lib64/jvm/jre
+  /usr/lib${LIB_SUFFIX}/jvm/default
   )
 
 set(_JNI_JAVA_AWT_LIBRARY_TRIES)
 set(_JNI_JAVA_INCLUDE_TRIES)
 
+if(NOT _JAVA_HOME_EXPLICIT)
 foreach(_java_dir IN LISTS _JNI_JAVA_DIRECTORIES_BASE)
   list(APPEND _JNI_JAVA_AWT_LIBRARY_TRIES
     ${_java_dir}/jre/lib/{libarch}
@@ -337,6 +308,7 @@ endforeach()
 JAVA_APPEND_LIBRARY_DIRECTORIES(JAVA_AWT_LIBRARY_DIRECTORIES
     ${_JNI_JAVA_AWT_LIBRARY_TRIES}
   )
+endif()
 
 set(JAVA_JVM_LIBRARY_DIRECTORIES)
 foreach(dir IN LISTS JAVA_AWT_LIBRARY_DIRECTORIES)
@@ -364,6 +336,7 @@ JAVA_APPEND_LIBRARY_DIRECTORIES(JAVA_AWT
   ${_JNI_JAVA_INCLUDE_TRIES}
   )
 
+if(NOT _JAVA_HOME_EXPLICIT)
 foreach(JAVA_PROG IN ITEMS "${JAVA_RUNTIME}" "${JAVA_COMPILE}" "${JAVA_ARCHIVE}")
   get_filename_component(jpath "${JAVA_PROG}" PATH)
   foreach(JAVA_INC_PATH IN ITEMS ../include ../java/include ../share/java/include)
@@ -380,6 +353,7 @@ foreach(JAVA_PROG IN ITEMS "${JAVA_RUNTI
     endif()
   endforeach()
 endforeach()
+endif()
 
 if(APPLE)
   if(DEFINED XCODE_VERSION)
